// <auto-generated />
using ImageSliderApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImageSliderApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240918135416_RenameOverlayTable")]
    partial class RenameOverlayTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ImageSliderApp.Models.Overlay", b =>
                {
                    b.Property<int>("OverlayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OverlayID"));

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int>("TemplateID")
                        .HasColumnType("int");

                    b.HasKey("OverlayID");

                    b.HasIndex("TemplateID");

                    b.ToTable("Overlays");
                });

            modelBuilder.Entity("ImageSliderApp.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<string>("RoomName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ImageSliderApp.Models.RoomTemplate", b =>
                {
                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("TemplateID")
                        .HasColumnType("int");

                    b.HasKey("RoomID", "TemplateID");

                    b.HasIndex("TemplateID");

                    b.ToTable("RoomTemplates");
                });

            modelBuilder.Entity("ImageSliderApp.Models.Template", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TemplateID"));

                    b.Property<string>("TemplateImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("TemplateName")
                        .HasColumnType("longtext");

                    b.HasKey("TemplateID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("ImageSliderApp.Models.Overlay", b =>
                {
                    b.HasOne("ImageSliderApp.Models.Template", "Template")
                        .WithMany("Overlays")
                        .HasForeignKey("TemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ImageSliderApp.Models.RoomTemplate", b =>
                {
                    b.HasOne("ImageSliderApp.Models.Room", "Room")
                        .WithMany("RoomTemplates")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImageSliderApp.Models.Template", "Template")
                        .WithMany("RoomTemplates")
                        .HasForeignKey("TemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ImageSliderApp.Models.Room", b =>
                {
                    b.Navigation("RoomTemplates");
                });

            modelBuilder.Entity("ImageSliderApp.Models.Template", b =>
                {
                    b.Navigation("Overlays");

                    b.Navigation("RoomTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
